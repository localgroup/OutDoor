<% layout('layouts/boilerplate') %>


<% if (error && error.message) { %>
    <div class="alert alert-danger">
        <%= error.message %>
    </div>
<% } %>


    <div class="row">
        <h1 class="text-center">Edit Campground</h1>
        <div class="col-md-6 offset-md-3">
            
            <form id="editCampgroundForm" action="/campgrounds/<%=campground._id%>?_method=PUT" method="POST" novalidate class="validated-form" enctype="multipart/form-data">
            <div class="mb-3">
                <label class="form-label" for="title">Title</label>
                <input class="form-control" type="text" id="title" name="campground[title]" value="<%=campground.title %>" required>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <br>
            <div class="mb-3">
                <label class="form-label" for="location">Location</label>
                <input class="form-control" type="text" id="location" name="campground[location]" value="<%=campground.location %>" required>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>

            <!-- <div class="mb-3">
                <div class="input-group mb-3">
                    <input type="file" class="form-control" id="image" name="image" multiple>
                    <label class="input-group-text" for="image">Add Images</label>
                </div>
            </div> -->

            <!-- file input -->
            <div class="mb-3">
                <label class="form-label" for="price">Add More Image(s):</label>
                <input type="file" class="filepond" id="image" name="image" multiple>
            </div>
            
            
    
            <div class="mb-3">
                <label class="form-label" for="price">Campground Price</label>
                <div class="input-group">
                    <span class="input-group-text" id="price-label">$</span>
                    <input type="text" class="form-control" id="price" placeholder="0.00" name="campground[price]" value="<%=campground.price %>" required>
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                </div>
            </div>
              
    
            <div class="mb-3">
                <label class="form-label" for="description">Description</label>
                <textarea class="form-control" id="description" name="campground[description]" required><%= campground.description %></textarea>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>


            <!-- delete images  -->

            <div class="mb-3">
                <div class="container">
                    <div class="row">
                        <% campground.images.forEach(function(img, i) { %>
                            <div class="col-md-3">
                                <div class="form-check-inline">
                                    <img src="<%= img.thumbnail %>" class="img-thumbnail" style="width: 100px; height: 100px;" alt="">
                                    <input type="checkbox" id="image-<%= i %>" name="deleteImages[]" value="<%= img.filename %>">
                                    <label for="image-<%= i %>">Delete?</label>
                                </div>
                            </div>
                            <% if ((i + 1) % 4 === 0) { %>
                                </div><div class="row">
                            <% } %>
                        <% }) %>
                    </div>
                </div>
            </div>
    
    
            <br>
            <div class="mb-3">
                <button class="btn btn-info">Update Campground</button>
            </div>
            
        </form>
    
    </body>
    <br>
    <footer>
        <a href="/campgrounds/<%= campground._id%>">Back To Campground</a>
    </footer>
    
        </div>


        <!-- <script>
            // register the FilePond Image Preview plugin
            FilePond.registerPlugin(FilePondPluginImagePreview);

            // select the file input element that you want to use FilePond with
            const inputElement = document.querySelector('input#image');

            // create a FilePond instance
            const pond = FilePond.create(inputElement, {
            instantUpload: false,
            allowMultiple: true,
            name: 'image'
            });

            // handle form submission
            document.getElementById('editCampgroundForm').addEventListener('submit', async (e) => {
            e.preventDefault(); // prevent the form from submitting normally, instead we need to handle the form submission manually with JavaScript when using FilePond

            // get the form element
            const form = e.target;

            // create a new FormData object
            const formData = new FormData(form);

            // remove empty values for 'image' field
            formData.delete('image');

            // add FilePond files to the form data
            const files = pond ? pond.getFiles() : [];
            if (files.length > 0) {
                for (let i = 0; i < files.length; i++) {
                formData.append('image', files[i].file, files[i].file.name);
                }
            }

            // submit the form using fetch
            try {
                const response = await fetch(form.action, {
                method: form.method,
                body: formData
                });

                if (!response.ok) {
                throw new Error('Network response was not ok ' + response.statusText);
                }

                // if form submission is successful, follow the redirect from the response
                if (response.redirected) {
                window.location.href = response.url;
                }
            } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
                // display an error message to the user
                alert('Error submitting form: ' + error.message);
            }
            });
          </script> -->

          <script>
            // register the FilePond Image Preview plugin
            FilePond.registerPlugin(FilePondPluginImagePreview);
           
            // select the file input element that you want to use FilePond with
            const inputElement = document.querySelector('input#image');
           
            // create a FilePond instance
            const pond = FilePond.create(inputElement, {
              instantUpload: false,
              allowMultiple: true,
              name: 'image'
            });
           
            // handle form submission
            document.getElementById('editCampgroundForm').addEventListener('submit', async (e) => {
              e.preventDefault(); // prevent the form from submitting normally, instead we need to handle the form submission manually with JavaScript when using FilePond
           
              // get the form element
              const form = e.target;
           
              // create a new FormData object
              const formData = new FormData(form);
           
              // remove empty values for 'image' field
              formData.delete('image');
           
              // add FilePond files to the form data
              const files = pond.getFiles();
              for (let i = 0; i < files.length; i++) {
                formData.append('image', files[i].file, files[i].file.name);
              }
           
              // submit the form using fetch
              try {
                const response = await fetch(form.action, {
                  method: form.method,
                  body: formData
                });
           
                if (!response.ok) {
                  throw new Error('Network response was not ok ' + response.statusText);
                }
           
                // if form submission is successful, follow the redirect from the response
                if (response.redirected) {
                  window.location.href = response.url;
                }
              } catch (error) {
                console.error('There was a problem with the fetch operation:', error);
              }
            });
          </script>

    </div>